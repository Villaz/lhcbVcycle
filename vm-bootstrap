#!/bin/sh
#
# This is run as root at the end of /var/lib/hepix/context/epilog.sh
#
# One parameters: DIRAC site name (eg VAC.Example.cc)
# 
#  Andrew.McNab@cern.ch - adapted from GridPP DIRAC VM, April 2014
#

# Just in case it doesn't exist
mkdir -p /etc/machineoutputs

(

cp /root/hostkey.pem /root/combined.pem
export numberLines=`wc -l /root/combined.pem | awk '{print $1}'`
export numberLinesPriv=`egrep -n 'BEGIN CERTIFICATE' /root/combined.pem | awk 'BEGIN{FS=":"};{print $1-1}'`
export numberLinesPub=`expr $numberLines - $numberLinesPriv`
head -n $numberLinesPriv /root/combined.pem > /root/hostkey.pem
tail -n $numberLinesPub /root/combined.pem > /root/hostcert.pem
chmod 600 /root/hostkey.pem
rm /root/combined.pem
ssh-keygen -y -f /root/hostkey.pem >> ~/.ssh/authorized_keys


date --utc +"%Y-%m-%d %H:%M:%S %Z vm-bootstrap vm-bootstrap Start bootstrap on `hostname`"

# We might be running from cvmfs or from /var/spool/checkout
export CONTEXTDIR=`readlink -f \`dirname $0\``
date --utc +"%Y-%m-%d %H:%M:%S %Z vm-bootstrap CONTEXTDIR=$CONTEXTDIR"

# Create a shutdown_message if ACPI shutdown signal received
cp -f $CONTEXTDIR/power.sh /etc/acpi/actions/power.sh

mountpoint /dev/shm
if [ $? != 0 ] ; then
  # Needed for POSIX semaphores and missing in CernVM 3
  mount /dev/shm
  chmod ugo+rwxt /dev/shm      
fi

# Get the big 40G logical partition as /scratch
mkdir -p /scratch
if [ -b /dev/vdb1 -a -b /dev/vdb2 ] ; then
  # Openstack at CERN with cvm* flavor? 
  # vda1 is boot image, vdb1 is root partition, vdb2 is unformatted
  mkfs -q -t ext4 /dev/vdb2
  mount /dev/vdb2 /scratch 
elif [ -b /dev/vdb1 ] ; then
  # Openstack at CERN with hep* flavor?
  # vda1 is boot image, vdb1 is root partition, and no vdb2
  # Since boot image is small, can use rest of vda for /scratch
  echo -e 'n\np\n2\n\n\nw\n'| fdisk /dev/vda
  mkfs -q -t ext4 /dev/vda2
  mount /dev/vda2 /scratch 
elif [ -b /dev/vdb ] ; then
  mkfs -q -t ext4 /dev/vdb
  mount /dev/vdb /scratch
elif [ -b /dev/sdb ] ; then
  mkfs -q -t ext4 /dev/sdb
  mount /dev/sdb /scratch
elif [ -b /dev/xvdb ] ; then
  mkfs -q -t ext4 /dev/xvdb
  mount /dev/xvdb /scratch
elif [ -b /dev/hdb ] ; then
  mkfs -q -t ext4 /dev/hdb
  mount /dev/hdb /scratch
else
  date --utc +'%Y-%m-%d %H:%M:%S %Z vm-bootstrap Missing vdb/hdb/sdb block device for /scratch'
  echo "500 Missing vdb/hdb/sdb block device for /scratch" > /etc/machineoutputs/shutdown_message
  #/sbin/shutdown -h now
  #sleep 1234567890
fi  

if [ ! -d /etc/machinefeatures ] ; then
  # No NFS mounted machine/job features? OpenStack rather than Vac?

  mkdir /etc/machinefeatures /etc/jobfeatures
  
  export     META_JOBFEATURES=`python -c 'import requests ; print requests.get("http://169.254.169.254/openstack/2013-10-17/meta_data.json").json()["meta"]["jobfeatures"]'`
  export META_MACHINEFEATURES=`python -c 'import requests ; print requests.get("http://169.254.169.254/openstack/2013-10-17/meta_data.json").json()["meta"]["machinefeatures"]'`
  export  META_MACHINEOUTPUTS=`python -c 'import requests ; print requests.get("http://169.254.169.254/openstack/2013-10-17/meta_data.json").json()["meta"]["machineoutputs"]'`

  ( cd /etc/jobfeatures     ; wget -nd -r --no-parent --reject='index.html*' $META_JOBFEATURES/     )
  ( cd /etc/machinefeatures ; wget -nd -r --no-parent --reject='index.html*' $META_MACHINEFEATURES/ )

  if [ `hostname` != `hostname -s` ] ; then
    hostname `hostname -s`.`grep '^ *search ' /etc/resolv.conf | head -1 | sed 's/^ *search *\([A-Z,a-z,-,.]*\) *.*$/\1/'`
  fi
 
fi

# anyone can create directories there
chmod ugo+rwxt /scratch

# Bigger cvmfs cache, on the logical partition
mkdir -p /scratch/cvmfs-cache
echo -e "CVMFS_QUOTA_LIMIT=11000\nCVMFS_CACHE_BASE=/scratch/cvmfs-cache" >>/etc/cvmfs/site.conf
/usr/bin/cvmfs_config reload
attr -g proxy /mnt/.ro
attr -g proxy /cvmfs/lhcb.cern.ch/

# Scratch tmp for TMPDIR
mkdir -p /scratch/tmp
chmod ugo+rwxt /scratch/tmp

if [ "$META_MACHINEOUTPUTS" == "" ] ; then
  # vm-heartbeat is writtenevery 5 minutes
  echo 0.0 0.0 0.0 0.0 0.0 > /etc/machineoutputs/vm-heartbeat
  echo '*/5 * * * * root echo `cut -f1-3 -d' ' /proc/loadavg` `cat /proc/uptime` >/etc/machineoutputs/vm-heartbeat' >/etc/cron.d/vm-heartbeat
else
  # put vm-heartbeat on MJF server every 5 minutes
  echo 0.0 0.0 0.0 0.0 0.0 > /etc/machineoutputs/vm-heartbeat
  /usr/bin/curl --capath /etc/grid-security/certificates --cert /root/hostkey.pem --upload-file /etc/machineoutputs/vm-heartbeat "$META_MACHINEOUTPUTS/vm-heartbeat"
  echo -e "RANDOM_DELAY=9\n*/10 * * * * root echo \`cut -f1-3 -d' ' /proc/loadavg\` \`cat /proc/uptime\` >/etc/machineoutputs/vm-heartbeat ; /usr/bin/curl --capath /etc/grid-security/certificates --cert /root/hostkey.pem --upload-file /etc/machineoutputs/vm-heartbeat $META_MACHINEOUTPUTS/vm-heartbeat >/tmp/curl.log 2>&1" >/etc/cron.d/vm-heartbeat
fi

# We swap on the logical partition if no CernVM 2 swapfile
# (cannot on CernVM 3 aufs filesystem)
if [ ! -f /var/swap ] ; then
  # Iff /scratch is ext4 can use:
  fallocate -l 4g /scratch/swapfile
  chmod 0600 /scratch/swapfile
  mkswap /scratch/swapfile 
  swapon /scratch/swapfile    
fi

# WLCG/LHCb Ganglia. Need 3.2.0+ to get override_hostname needed by NAT.
rpm --nodeps -e ganglia ganglia-gmond ganglia-gmetad ganglia-web
rpm -i http://downloads.sourceforge.net/project/ganglia/ganglia%20monitoring%20core/3.4.0/RHEL6-RPMS/libganglia-3.4.0-1.x86_64.rpm \
       http://downloads.sourceforge.net/project/ganglia/ganglia%20monitoring%20core/3.4.0/RHEL6-RPMS/ganglia-gmond-3.4.0-1.x86_64.rpm
       
GMONDPORT=`python -c "import requests ; print requests.get('http://lgm.cern.ch/lhcb-gmond-cluster-cfg.json', timeout=60).json()['$1']['Port']"`
if [ $? = 0 -a "$GMONDPORT" != "" ] ; then
  sed -e "s/##HOST_NAME##/$HOSTNAME/" -e "s/##SITE_NAME##/$1/" -e "s/##PORT_NUMBER##/$GMONDPORT/" /var/spool/checkout/context/gmond.conf > /etc/ganglia/gmond.conf
  service gmond restart
fi

# Get CA certs from cvmfs
ln -sf /cvmfs/grid.cern.ch/etc/grid-security /etc/grid-security

# Don't want to be doing this at 4 or 5am every day!
rm -f /etc/cron.daily/mlocate.cron

# Avoid age-old sudo problem
echo 'Defaults !requiretty' >>/etc/sudoers
echo 'Defaults visiblepw'   >>/etc/sudoers
      
# Create the dirac account to run the JobAgent
/usr/sbin/useradd -b /scratch dirac

cd /scratch/dirac

mkdir -p /scratch/dirac/etc/grid-security
cp /root/hostkey.pem /scratch/dirac/etc/grid-security
chmod 0600 /scratch/dirac/etc/grid-security/hostkey.pem

chmod 0755 /scratch/dirac
chown -R dirac.dirac /scratch/dirac

# add diracuser account that dirac can sudo to
/usr/sbin/useradd -m -b /scratch diracuser
echo 'Defaults>diracuser !requiretty'        >>/etc/sudoers
echo 'Defaults>diracuser visiblepw'          >>/etc/sudoers
echo 'Defaults>diracuser !env_reset'         >>/etc/sudoers
echo 'dirac ALL = (diracuser) NOPASSWD: ALL' >>/etc/sudoers

# install our glexec-style sudo wrapper
mkdir -p /opt/glite/sbin
cp $CONTEXTDIR/glexec /opt/glite/sbin/glexec
chmod ugo+x /opt/glite/sbin/glexec

# Now run the pilot script
/usr/bin/sudo -n -u dirac $CONTEXTDIR/vm-pilot $* >>/etc/machineoutputs/vm-pilot.log 2>&1

$CONTEXTDIR/ParseJobAgentLog /etc/machineoutputs/vm-pilot.log > /etc/machineoutputs/shutdown_message

if [ "$META_MACHINEOUTPUTS" != "" ] ; then
  (
    cd /etc/machineoutputs
    for i in *
    do
     if [ -f $i ] ; then
      curl --capath /etc/grid-security/certificates --cert /root/hostkey.pem --upload-file "$i" "$META_MACHINEOUTPUTS/"
     fi
    done
  )
fi 

date --utc +'%Y-%m-%d %H:%M:%S %Z vm-bootstrap Run /sbin/shutdown -h now'
#/sbin/shutdown -h now
#sleep 1234567890

) >>/etc/machineoutputs/vm-bootstrap.log 2>&1
